# -*- coding: utf-8 -*-
"""Neuron

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z7gd24bd9K2Ufn8TZ6bT_Ea_dAlNabSB
"""

import numpy as np
class Neuron:
    def __init__(self, weights, bias, func):
        self.weights = np.array(weights)
        self.bias = bias
        self.activation_functions = {
            "ReLU": self._relu,
            "Sigmoide": self._sigmoid,
            "Tangente Hiperb√≥lica": self._tanh
        }
        self.func = func

    def run(self, input_data):
        input_data = np.array(input_data)
        y = np.dot(self.weights, input_data) + self.bias
        activation_result = self.activation_functions[self.func](y)
        return activation_result

    @staticmethod
    def _relu(y):
        return max(0, y)

    @staticmethod
    def _sigmoid(y):
        return 1 / (1 + np.exp(-y))

    @staticmethod
    def _tanh(y):
        return np.tanh(y)

    def change_weights(self, new_weights):
        self.weights = np.array(new_weights)

    def change_bias(self, new_bias):
        self.bias = new_bias